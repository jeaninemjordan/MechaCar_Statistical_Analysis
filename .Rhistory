#Deliverable 1
#load dplyr
library(dplyr)
#load data
MechaCar <- read.csv(file='data/MechaCar_mpg.csv', check.names=F, stringsAsFactors=F)
#load data
MechaCar <- read.csv(file='data/MechaCar_mpg.csv', check.names=F, stringsAsFactors=F)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
#load data
MechaCar <- read.csv(file='data/MechaCar_mpg.csv', check.names=F, stringsAsFactors=F)
#load data
MechaCar <- read.csv('MechaCar_mpg.csv', check.names=F, stringsAsFactors=F)
#Deliverable 1
#load dplyr
library(dplyr)
#load data
MechaCar <- read.csv('MechaCar_mpg.csv', check.names=F, stringsAsFactors=F)
#linear regression
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=MechaCar)
#summary
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=MechaCar))
#Deliverable 2
#load data
Suspension <- read.csv(file='data/Suspension_Coil.csv', check.names=F, stringsAsFactors=F)
#Deliverable 2
#load data
Suspension <- read.csv('Suspension_Coil.csv', check.names=F, stringsAsFactors=F)
#summary
total_summary <- Suspension %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), StDev=sd(PSI))
#lot summary
lot_summary <- Suspension %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),StDev=sd(PSI))
#Deliverable 3
#t-test to determine consistency in sample means
t.test(Suspension$PSI, mu=1500
#t-tests for individual lots
t.test(subset(Suspension, Manufacturing_Lot=="Lot1")$PSI, mu=1500)
#t-test to determine consistency in sample means
t.test(Suspension$PSI, mu=1500)
#t-tests for individual lots
t.test(subset(Suspension, Manufacturing_Lot=="Lot1")$PSI, mu=1500)
t.test(subset(Suspension, Manufacturing_Lot=="Lot2")$PSI, mu=1500)
t.test(subset(Suspension, Manufacturing_Lot=="Lot3")$PSI, mu=1500)
View(lot_summary)
View(lot_summary)
View(MechaCar)
View(MechaCar)
View(Suspension)
View(Suspension)
View(total_summary)
View(total_summary)
#Deliverable 1
#load dplyr
library(dplyr)
#load data
MechaCar <- read.csv(file='MechaCar_mpg.csv', check.names=F, stringsAsFactors=F)
#linear regression
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=MechaCar)
#summary
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=MechaCar))
#Deliverable 2
#load data
Suspension <- read.csv(file='Suspension_Coil.csv', check.names=F, stringsAsFactors=F)
#summary
total_summary <- Suspension %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), StDev=sd(PSI))
#lot summary
lot_summary <- Suspension %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),StDev=sd(PSI))
#Deliverable 3
#t-test to determine consistency in sample means
t.test(Suspension$PSI, mu=1500)
#t-tests for individual lots
t.test(subset(Suspension, Manufacturing_Lot=="Lot1")$PSI, mu=1500)
t.test(subset(Suspension, Manufacturing_Lot=="Lot2")$PSI, mu=1500)
t.test(subset(Suspension, Manufacturing_Lot=="Lot3")$PSI, mu=1500)
View(total_summary)
View(Suspension)
View(total_summary)
View(total_summary)
# Linear Regression to Predict MPG
# read csv to dataframe
mechacar_mpg_df <- read.csv(file='./resources/MechaCar_mpg.csv', check.names = F, stringsAsFactors = F)
# Linear Regression to Predict MPG
# read csv to dataframe
mechacar_mpg_df <- read.csv(file='./MechaCar_mpg.csv', check.names = F, stringsAsFactors = F)
head(mechacar_mpg_df)
# multiple linear regression
lm(mpg~vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, data = mechacar_mpg_df)
# find the p-value and r-squared
summary(lm(mpg~vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, data = mechacar_mpg_df))
# Supension Coil Lot Analysis
# read csv to dataframe
suspension_coil_df <- read.csv(file = './resources/Suspension_Coil.csv', check.names = F, stringsAsFactors = F)
# Linear Regression to Predict MPG
# read csv to dataframe
mechacar_mpg_df <- read.csv(file='./MechaCar_mpg.csv', check.names = F, stringsAsFactors = F)
head(mechacar_mpg_df)
# multiple linear regression
lm(mpg~vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, data = mechacar_mpg_df)
# find the p-value and r-squared
summary(lm(mpg~vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, data = mechacar_mpg_df))
# Supension Coil Lot Analysis
# read csv to dataframe
suspension_coil_df <- read.csv(file = './Suspension_Coil.csv', check.names = F, stringsAsFactors = F)
head(suspension_coil_df)
# create a summary dataframe
total_summary <- suspension_coil_df %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI))
library(dplyr)
# Linear Regression to Predict MPG
# read csv to dataframe
mechacar_mpg_df <- read.csv(file='./resources/MechaCar_mpg.csv', check.names = F, stringsAsFactors = F)
library(dplyr)
# Linear Regression to Predict MPG
# read csv to dataframe
mechacar_mpg_df <- read.csv(file='./MechaCar_mpg.csv', check.names = F, stringsAsFactors = F)
head(mechacar_mpg_df)
# multiple linear regression
lm(mpg~vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, data = mechacar_mpg_df)
# find the p-value and r-squared
summary(lm(mpg~vehicle_length+vehicle_weight+spoiler_angle+ground_clearance+AWD, data = mechacar_mpg_df))
# Supension Coil Lot Analysis
# read csv to dataframe
suspension_coil_df <- read.csv(file = './Suspension_Coil.csv', check.names = F, stringsAsFactors = F)
head(suspension_coil_df)
# create a summary dataframe
total_summary <- suspension_coil_df %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI))
# create summaries for each lot
lot_summary <- suspension_coil_df %>% group_by(Manufacturing_Lot) %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI), .groups = 'keep')
# T-tests on suspension coils
t.test(suspension_coil_df$PSI, mu=1500)
t.test(subset(suspension_coil_df,Manufacturing_Lot=="Lot1")$PSI, mu = 1500)
t.test(subset(suspension_coil_df,Manufacturing_Lot=="Lot2")$PSI, mu = 1500)
t.test(subset(suspension_coil_df,Manufacturing_Lot=="Lot3")$PSI, mu = 1500)
